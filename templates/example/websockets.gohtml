{{- define "example/websockets.gohtml" }}
    {{- template "layout/header.gohtml" . }}
    <h1>Websockets</h1>
    <input id="input" type="text" />
    <button onclick="send(socket)">Send</button>
    <pre id="output"></pre>
    
    <script>
        const maxConnectionsAttempts = 5;
        const timeBeforeNewAttempt   = 5000;
        
        let input               = document.getElementById("input");
        let output              = document.getElementById("output");
        let connectionsAttempts = 0;
        let socket;

        /**
         * Connexion au serveur
         *
         * @author Fabien Bellanger
         * @return WebSocket
         */
        function wsConnect() {
            socket = new WebSocket("ws://localhost:" + {{ .webSocketUrl }});

            socket.onopen = function () {
                connectionsAttempts = 1;
                output.innerHTML += "Status: Connected\n";
            };

            socket.onmessage = function (e) {
                readMessage(e);
            };

            socket.onerror = function (ev) {
                console.error(ev);
            };

            socket.onclose = function () {
                output.innerHTML += `Status: Disconnected (${connectionsAttempts} / ${maxConnectionsAttempts})\n`;

                if (connectionsAttempts < maxConnectionsAttempts)
                {
                    // On retente une connexion au serveur
                    // -----------------------------------
                    setTimeout(function() {
                        socket = wsConnect();
                    }, timeBeforeNewAttempt);
                }
            };
            
            connectionsAttempts++;

            return socket;
        }

        /**
         * Envoi d'un message au serveur
         *
         * @author Fabien Bellanger
         * @param Socket socket
         */
        function send(socket) {
            socket.send(JSON.stringify({message: "test", data : {text: {toto: input.value}}}));
            socket.send(JSON.stringify({m: "t", d : {text: {toto: input.value}}}));
            socket.send("klklklklkll");

            input.value = "";
        }

        /**
         * Lecture d'un message
         *
         * @author Fabien Bellanger
         * @param Event event
         */
        function readMessage(event)
        {
            output.innerHTML += "Server: " + event.data + "\n";
        }

        // Connexion au serveur
        // --------------------
        socket = wsConnect();
    </script>
    {{- template "layout/footer.gohtml" }}
{{- end }}
